apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: atuin-db
  name: atuin-db
  namespace: atuin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: atuin-db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (HEAD)
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'atuin'
        vault.hashicorp.com/agent-inject-secret-config: 'secret/data/atuin'
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "secret/data/atuin" -}}
            export POSTGRES_PASSWORD="{{ .Data.data.password }}"
            export POSTGRES_USER="{{ .Data.data.user }}"
          {{- end }}
      creationTimestamp: null
      labels:
        io.kompose.service: atuin-db
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
      - args:
          ['source /vault/secrets/config && /usr/local/bin/docker-entrypoint.sh && postgres']
          #['source /vault/secrets/config && /usr/local/bin/docker-entrypoint.sh && sleep 600']
        command: ['bash', '-c']  
        env:
        - name: POSTGRES_DB
          value: atuin
          name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        image: postgres:14
        imagePullPolicy: ""
        name: atuin-db
        resources: {}
        volumeMounts:
        - mountPath: /var/lib/postgresql/data/
          name: atuin-database
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: atuin-database
        persistentVolumeClaim:
          claimName: atuin-database
status: {}
