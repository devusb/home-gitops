apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.21.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: atuin
  name: atuin
  namespace: atuin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: atuin
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.21.0 (HEAD)
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'atuin'
        vault.hashicorp.com/agent-inject-secret-config: 'secret/data/atuin'
        vault.hashicorp.com/agent-inject-template-config: |
          {{ with secret "secret/data/atuin" -}}
            export ATUIN_DB_URI="postgres://postgres:{{ .Data.data.password }}@atuin-db-postgresql:5432/atuin"
          {{- end }}
      creationTimestamp: null
      labels:
        io.kompose.service: atuin
    spec:
      containers:
      - args:
          ['source /vault/secrets/config && /usr/local/bin/atuin server start']
        command: ['bash', '-c']  
        env:
        - name: ATUIN_HOST
          value: 0.0.0.0
        - name: ATUIN_OPEN_REGISTRATION
          value: "true"
        - name: ATUIN_PORT
          value: "8888"
        image: ghcr.io/ellie/atuin:main
        imagePullPolicy: Always
        name: atuin
        resources: {}
        volumeMounts:
        - mountPath: /config
          name: atuin-config
      - name: ts-sidecar
        imagePullPolicy: Always
        image: "ghcr.io/tailscale/tailscale:latest"
        env:
          # Store the state in a k8s secret
        - name: TS_KUBE_SECRET
          value: "tailscale-auth"
        - name: TS_USERSPACE
          value: "false"
        - name: TS_AUTH_KEY
          valueFrom:
            secretKeyRef:
              name: tailscale-key
              key: AUTH_KEY
              optional: true
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
      restartPolicy: Always
      serviceAccountName: "atuin"
      volumes:
      - name: atuin-config
        persistentVolumeClaim:
          claimName: atuin-config
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
status: {}
